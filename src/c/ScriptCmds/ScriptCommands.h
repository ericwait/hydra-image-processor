// This file is used to register commands that are callable via script languages
SCR_BEGIN_COMMANDS
	/////////////////
	// SCRIPT_COMMAND_DEF:
	// Add new wrapped commands here
	/////////////////
	// SCR_CMD(Name, Params, CudaFunc) -
	//   Autogenerates script command `Name` info based on parameters,
	//   automatically creates typed stub functions that call `CudaFunc`
	//   in CudaImageProcessing project.
	//   NOTE: the ScriptCommand_`Name` class must be created in a header with a help
	//     string definition. For examples see ScrCmd*.h files.
	/////////////////
	// SCR_CMD_NOPROC(Name, Params)
	//   Autogenerated script command `Name` info based on parameters,
	//   no automatic cuda calls are made.
	//   NOTE: the ScriptCommand_`Name` class must be created in a header with a help
	//     string definition as well as an execute or process<OutT,InT> function definition.
	/////////////////

	// These are default commands defined for all script wrappers.
	SCR_CMD_NOPROC(Help, SCR_PARAMS(SCR_OPTIONAL(SCR_SCALAR(std::string), command, "")))
	SCR_CMD_NOPROC(Info, SCR_PARAMS(SCR_OUTPUT(SCR_STRUCT, cmdInfo)))
	SCR_CMD_NOPROC(DeviceCount, SCR_PARAMS(SCR_OUTPUT(SCR_SCALAR(uint32_t), numCudaDevices),
												SCR_OUTPUT(SCR_STRUCT, memStats)))
	SCR_CMD_NOPROC(DeviceStats, SCR_PARAMS(SCR_OUTPUT(SCR_STRUCT, deviceStatsArray)))

	SCR_CMD(Closure, SCR_PARAMS
		(
			SCR_INPUT(SCR_IMAGE(SCR_DYNAMIC), imageIn),
			SCR_OUTPUT(SCR_IMAGE(SCR_DYNAMIC), imageOut),
			SCR_INPUT(SCR_IMAGE_CONVERT(float), kernel),
			SCR_OPTIONAL(SCR_SCALAR(int), numIterations, 1),
			SCR_OPTIONAL(SCR_SCALAR(int), device, -1)
		),
		cClosure
	)

	/////////////////

SCR_END_COMMANDS
